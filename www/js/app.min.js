/*! bahnhof 2015-12-14 */

"use strict";

angular.module("bahnhof", [ "ionic", "bahnhof.controllers", "bahnhof.services", "bahnhof.config" ]).run(function($ionicPlatform) {
    $ionicPlatform.ready(function() {
        window.cordova && window.cordova.plugins.Keyboard && cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0), 
        window.StatusBar && StatusBar.styleDefault();
    });
}).config(function($stateProvider, $urlRouterProvider) {
    $stateProvider.state("home", {
        url: "/home",
        views: {
            "": {
                templateUrl: "templates/desktop/home.html",
                controller: "HomeCtrl"
            }
        }
    }).state("category", {
        url: "/category/:categorySlug",
        views: {
            "": {
                templateUrl: "templates/desktop/category.html",
                controller: "CategoryCtrl"
            }
        }
    }).state("post", {
        url: "/post/:postSlug",
        views: {
            "": {
                templateUrl: "templates/desktop/post.html",
                controller: "PostsCtrl"
            }
        }
    }), $urlRouterProvider.otherwise("/home");
}), angular.module("bahnhof.config", []).constant("ENV", {
    name: "production",
    apiEndpoint: "http://infinite-inlet-6468.herokuapp.com/"
}), angular.module("bahnhof.controllers", []).controller("NavCtrl", function($scope, $stateParams, Categories) {
    Categories.all().then(function(categories) {
        $scope.categories = categories;
    });
}).controller("HomeCtrl", function($scope, $document, Categories, Posts) {
    $scope.categories = Categories.all();
}).controller("HomeCategoryCtrl", function($scope, $document, Categories, Posts) {
    $scope.get = function(categorySlug, limit) {
        $scope.categories.then(function() {
            $scope.category = Categories.get(categorySlug), Posts.getbyCategory($scope.category.id, 0, limit).then(function(posts) {
                $scope.posts = posts, "spotlight" == categorySlug && $document.ready(function() {
                    $(".flexslider").flexslider({
                        animation: "slide"
                    });
                });
            });
        });
    };
}), angular.module("bahnhof.services", []), angular.module("bahnhof.services").factory("Posts", [ "$filter", "$http", "ENV", function($filter, $http, ENV) {
    var posts = [], posts_endpoint = ENV.apiEndpoint + "posts";
    return {
        all: function() {
            return $http.get(posts_endpoint).then(function(response) {
                return posts = response.data;
            });
        },
        get: function(slug) {
            return $filter("filter")(posts, {
                slug: slug
            }, !0)[0];
        },
        getbyCategory: function(categoryId, offset, limit) {
            return $http({
                url: posts_endpoint,
                method: "GET",
                params: {
                    category_id: categoryId,
                    offset: offset,
                    limit: limit
                }
            }).then(function(response) {
                return posts = response.data;
            });
        }
    };
} ]), angular.module("bahnhof.services").factory("Categories", [ "$filter", "$http", "ENV", function($filter, $http, ENV) {
    var categories = [], categories_endpoint = ENV.apiEndpoint + "categories";
    return {
        all: function() {
            return $http.get(categories_endpoint).then(function(response) {
                return categories = response.data;
            });
        },
        get: function(slug) {
            return $filter("filter")(categories, {
                slug: slug
            }, !0)[0];
        }
    };
} ]);
//# sourceMappingURL=app.min.js.map